# 11.2 시계열 기초
# Time Series Basics
# p428 op322
'''
time stamp
시간을 인덱스로 쓰는 방법
'''
from datetime import datetime

dates = [datetime(2011, 1, 2), datetime(2011, 1, 5),
         datetime(2011, 1, 7), datetime(2011, 1, 8),
         datetime(2011, 1, 10), datetime(2011, 1, 12)]

ts = pd.Series(np.random.randn(6), index=dates)
    # 인덱스를 시간으로 써보자

stamp = ts.index[2]
ts[stamp]

longer_ts = pd.Series(np.random.randn(1000),
                      index = pd.date_range('1/1/2000', periods=1000))
    '''
    pandas.date_range
    periods = int, optional
        Number of periods to generate.
    https://pandas.pydata.org/docs/reference/api/pandas.date_range.html
    '''
longer_ts['2001']
longer_ts['2001-01']

ts[datetime(2011,1,7):]
    # : 구간 슬라이싱 가능

ts['1/6/2011':'1/11/2011']
ts.truncate(after='1/9/2011')

dates = pd.date_range('1/1/2000',periods=100,freq='W-WED')
    '''
    freq = str or DateOffset, default ‘D’
    Frequency strings can have multiples, e.g. ‘5H’.
    See here for a list of frequency aliases.
    '''

# p436
index = pd.date_range('2012-04-01', '2012-06-01')
    # DatetimeIndex
    # dtype='datetime64[ns]', freq='D'
        '''
        p438 op329 Table 11-4
        ---------------
        D : Day
        W : Weekend
        M : Month end
        BM : Business Month end
        W-MON...
        W-WED : Wednesday
        '''
pd.date_range('2021-04-01', '2021-10-30', freq='BM')
pd.date_range('2021-04-01', '2021-10-30', freq='M')

pd.date_range('2021-04-01', '2021-10-30', freq='Q-JAN')
    # DatetimeIndex(['2021-04-30', '2021-07-31'], dtype='datetime64[ns]', freq='Q-JAN')
pd.date_range('2021-04-01', '2021-10-30', freq='Q-FEB')
    # DatetimeIndex(['2021-05-31', '2021-08-31'], dtype='datetime64[ns]', freq='Q-FEB')
    # 'Q-쿼터시작월'로부터 기간 내 1,2,3,4쿼터 마지막 날 출력
pd.date_range('2021-04-01', '2025-10-30', freq='A-MAR')

pd.date_range('2012-05-02 12:56:31', periods=5)


# 11.3.2 빈도와 날짜 오프셋
from pandas.tseries.offsets import Hour, Minute
hour = Hour()
four_hours = Hour(4)    # 4시간을 뜻하는 객체


# 11.3.3 데이터 시프트
# p441 op332
ts = pd.Series(np.random.randn(4),
               index = pd.date_range('1/1/2000', periods = 4, freq='M'))
ts.shift(2)
ts.shift(-2)

# 오프셋만큼 날짜 시프트하기
from pandas.tseries.offsets import Day, MonthEnd
now = datetime(2011, 11, 17)
now + 3*Day()
    # Day()는 1일
now + MonthEnd(2)
    # 다음달 후 말일, 2 = 1+1... 1개월 후 말일


# 11.4 시간대 다루기
import pytz
     # python timezones
pytz.common_timezones[-5:]
pytz.timezone("Asia/Seoul")
ts.tz_localize('UTC')   # 기준
ts.tz_localize("Asia/Seoul")    # 서울 시간으로 변환
pd.Timestamp('2021-05-12 15:00').tz_localize('UTC').tz_convert('Asia/Seoul')


# 11.5 기간과 기간 연산
# p451

# 11.6 리샘플링과 빈도 변환
# p462

rng = pd.date_range('2000-01-01', periods = 100, freq='D')
ts = pd.Series(np.random.randn(len(rng)), index = rng)
    # Day 인덱스에 날짜 수만큼 랜덤한 수를 넣은 시리즈

ts.resample('M')
    # <pandas.core.resample.DatetimeIndexResampler object at 0x00000137DDB867C0>
    # resampler 객체 반환
ts.resample('M').mean()
    '''
    # 'D'에서 'M' 수준으로 업샘플링 되었다 
    2000-01-31    0.002546
    2000-02-29    0.082794
    2000-03-31   -0.015960
    2000-04-30   -0.406894
    '''
ts.resample('M', kind = 'period').mean()
    '''
    kind = {‘timestamp’, ‘period’}, optional, default None
    Pass ‘timestamp’ to convert the resulting index to a DateTimeIndex 
    or ‘period’ to convert it to a PeriodIndex. 
    By default the input representation is retained.
    '''
ts.resample('5min').ohlc()

