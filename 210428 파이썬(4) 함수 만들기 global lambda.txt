def make_list(n):
    list_b = []
    for i in range(n+1):
        list_b.append(i)
    return list_b
list_b = make_list(7)
print(list_b)


def make_list(n):
    list_b = []
    for i in range(n+1):
        list_b.append(i)
        return list_b
list_b = make_list(7)
print(list_b)

list_=[]
list_.append(1)
return list_

#--------------------------------
# p164
def vartest(a):
    a=1
    a = a+1
    return a
vartest(a)
print(a)
    # NameError: name 'a' is not defined

a = 1
def vartest(a):
    a = a+1
    return a
vartest(3)
print(a)    # a=1
    # vartest(3)를 실행해도 a값은 1이다
    # a는 함수 안에서만 갱신되고
    # 바깥에서 선언했던 a값이 저장되어있음

del a # 값 지워서 변하는 거 확인하자


# 함수 안에서 함수 밖 변수를 갱신하는 방법 (p165)
# return a 또는 global()함수를 사용할 것
## return
a = 1
def vartest(x):
    a = x+10
    return(a)
a = vartest(1)

## global (p164)
b = 1
def vartest(x):
    global b
    b = x+10
vartest(1)
print(b)
    ## 함수 내에서 global을 선언하면 함수 내에서 변한 b값이 함수 밖에도 적용됨

#-------------------------
# lambda (p166)
# 함수를 한 줄로 생성하는 예약어
lambda a, b: a+b

## p167에 적힌 add = lambda는 바람직하지 않은 코드
## lambda는 이름을 지어주지 않으려고 사용하기 때문
## map 없이 lambda 실행해보려고 쓴 예시문일뿐

# lambda는 map함수와 같이 쓴다(p240)
list(map(lambda a: a**2, [1,2,3]))

#-------------------------
#-------------------------
a = 1
def var(x):
    a = 1
    a = x + 10
    print(a)
var(1)
print(a)





